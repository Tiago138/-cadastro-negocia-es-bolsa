{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","resolve","reject","get","then","negociacoes","map","objeto","Date","data","quantidade","valor","erro","console","log","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","Error","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","negociacaoExistente","JSON","stringify"],"mappings":"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","sourcesContent":["import { HttpService } from \"./HttpService.js\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory.js\";\r\nimport { NegociacaoDao } from \"../dao/NegociacaoDao.js\";\r\nimport { Negociacao } from \"../models/Negociacao.js\";\r\n\r\nexport class NegociacaoService {\r\n  constructor() {\r\n    this._http = new HttpService();\r\n  }\r\n\r\n  obterNegociacoesDaSemana() {\r\n    return new Promise((resolve, reject) => {\r\n      this._http\r\n        .get(\"negociacoes/semana\")\r\n        .then((negociacoes) => {\r\n          resolve(\r\n            negociacoes.map(\r\n              (objeto) =>\r\n                new Negociacao(\r\n                  new Date(objeto.data),\r\n                  objeto.quantidade,\r\n                  objeto.valor\r\n                )\r\n            )\r\n          );\r\n        })\r\n        .catch((erro) => {\r\n          console.log(erro);\r\n          reject(\"Não foi possivel adiocinar as negociações da semana\");\r\n        });\r\n    });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaAnterior() {\r\n    return new Promise((resolve, reject) => {\r\n      this._http\r\n        .get(\"negociacoes/anterior\")\r\n        .then((negociacoes) => {\r\n          resolve(\r\n            negociacoes.map(\r\n              (objeto) =>\r\n                new Negociacao(\r\n                  new Date(objeto.data),\r\n                  objeto.quantidade,\r\n                  objeto.valor\r\n                )\r\n            )\r\n          );\r\n        })\r\n        .catch((erro) => {\r\n          console.log(erro);\r\n          reject(\r\n            \"Não foi possivel adiocinar as negociações da semana anterior\"\r\n          );\r\n        });\r\n    });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada() {\r\n    return new Promise((resolve, reject) => {\r\n      this._http\r\n        .get(\"negociacoes/retrasada\")\r\n        .then((negociacoes) => {\r\n          resolve(\r\n            negociacoes.map(\r\n              (objeto) =>\r\n                new Negociacao(\r\n                  new Date(objeto.data),\r\n                  objeto.quantidade,\r\n                  objeto.valor\r\n                )\r\n            )\r\n          );\r\n        })\r\n        .catch((erro) => {\r\n          console.log(erro);\r\n          reject(\r\n            \"Não foi possivel adiocinar as negociações da semana retrasada\"\r\n          );\r\n        });\r\n    });\r\n  }\r\n\r\n  obterNegociacoes() {\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.obterNegociacoesDaSemana(),\r\n        this.obterNegociacoesDaSemanaAnterior(),\r\n        this.obterNegociacoesDaSemanaRetrasada(),\r\n      ])\r\n        .then((periodos) => {\r\n          let negociacoes = periodos\r\n            .reduce((dados, periodo) => dados.concat(periodo), [])\r\n            .map(\r\n              (dado) =>\r\n                new Negociacao(new Date(dado.data), dado.quantidade, dado.valor)\r\n            );\r\n\r\n          resolve(negociacoes);\r\n        })\r\n        .catch((erro) => reject(erro));\r\n    });\r\n  }\r\n\r\n  cadastra(negociacao) {\r\n    return ConnectionFactory.getConnection()\r\n      .then((connection) => new NegociacaoDao(connection))\r\n      .then((dao) => dao.adiciona(negociacao))\r\n      .then(() => \"Negociação adicionada com sucesso\")\r\n      .catch((erro) => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível adicionar a negociação\");\r\n      });\r\n  }\r\n\r\n  lista() {\r\n    return ConnectionFactory.getConnection()\r\n      .then((connection) => new NegociacaoDao(connection))\r\n      .then((dao) => dao.listaTodos())\r\n      .catch((erro) => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível adicionar as negociações\");\r\n      });\r\n  }\r\n\r\n  apaga() {\r\n    return ConnectionFactory.getConnection()\r\n      .then((connection) => new NegociacaoDao(connection))\r\n      .then((dao) => dao.apagaTodos())\r\n      .then(() => \"Negociações apagadas com sucesso\")\r\n      .catch((erro) => {\r\n        console.log(erro);\r\n        throw new Error(\"não foi possível apagar as negociações\");\r\n      });\r\n  }\r\n\r\n  importa(listaAtual) {\r\n    return this.obterNegociacoes()\r\n      .then((negociacoes) =>\r\n        negociacoes.filter(\r\n          (negociacao) =>\r\n            !listaAtual.some(\r\n              (negociacaoExistente) =>\r\n                JSON.stringify(negociacao) ==\r\n                JSON.stringify(negociacaoExistente)\r\n            )\r\n        )\r\n      )\r\n      .catch((erro) => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível buscar negociações para importar\");\r\n      });\r\n  }\r\n}\r\n"],"file":"NegociacaoService.js"}