{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","name","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,MAAAA,U,uBAAAA,U;;;+BAEIC,a;AACX,+BAAYC,UAAZ,EAAwB;AAAA;;AACtB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;;;;iBAED,kBAASC,UAAT,EAAqB;AAAA;;AACnB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,OAAO,GAAG,KAAI,CAACN,WAAL,CACXO,WADW,CACC,CAAC,KAAI,CAACN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,KAAI,CAACP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKAI,cAAAA,OAAO,CAACI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACzBP,gBAAAA,OAAO;AACR,eAFD;;AAIAE,cAAAA,OAAO,CAACM,OAAR,GAAkB,UAACD,CAAD,EAAO;AACvBE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAX,gBAAAA,MAAM,CAAC,yCAAD,CAAN;AACD,eAHD;AAID,aAdM,CAAP;AAeD;;;iBAED,sBAAa;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIY,MAAM,GAAG,MAAI,CAACjB,WAAL,CACVO,WADU,CACE,CAAC,MAAI,CAACN,MAAN,CADF,EACiB,WADjB,EAEVO,WAFU,CAEE,MAAI,CAACP,MAFP,EAGViB,UAHU,EAAb;;AAKA,kBAAIC,WAAW,GAAG,EAAlB;;AAEAF,cAAAA,MAAM,CAACP,SAAP,GAAmB,UAACC,CAAD,EAAO;AACxB,oBAAIS,KAAK,GAAGT,CAAC,CAACI,MAAF,CAASM,MAArB;;AACA,oBAAID,KAAJ,EAAW;AACT,sBAAIE,IAAI,GAAGF,KAAK,CAACG,KAAjB;AACAJ,kBAAAA,WAAW,CAACK,IAAZ,CACE,IAAI3B,UAAJ,CAAeyB,IAAI,CAACG,KAApB,EAA2BH,IAAI,CAACI,WAAhC,EAA6CJ,IAAI,CAACK,MAAlD,CADF;AAGAP,kBAAAA,KAAK,YAAL;AACD,iBAND,MAMO;AACLhB,kBAAAA,OAAO,CAACe,WAAD,CAAP;AACD;AACF,eAXD;;AAaAF,cAAAA,MAAM,CAACL,OAAP,GAAiB,UAACD,CAAD,EAAO;AACtBE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeY,IAA3B;AACAvB,gBAAAA,MAAM,CAAC,wCAAD,CAAN;AACD,eAHD;AAID,aAzBM,CAAP;AA0BD;;;iBAED,sBAAa;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,OAAO,GAAG,MAAI,CAACN,WAAL,CACXO,WADW,CACC,CAAC,MAAI,CAACN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAI,CAACP,MAFN,EAGX4B,KAHW,EAAd;;AAKAvB,cAAAA,OAAO,CAACI,SAAR,GAAoB,UAACC,CAAD;AAAA,uBAAOP,OAAO,CAAC,kCAAD,CAAd;AAAA,eAApB;;AAEAE,cAAAA,OAAO,CAACM,OAAR,GAAkB,UAACD,CAAD,EAAO;AACvBE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAX,gBAAAA,MAAM,CAAC,wCAAD,CAAN;AACD,eAHD;AAID,aAZM,CAAP;AAaD","sourcesContent":["import { Negociacao } from \"../models/Negociacao.js\";\r\n\r\nexport class NegociacaoDao {\r\n  constructor(connection) {\r\n    this._connection = connection;\r\n    this._store = \"negociacoes\";\r\n  }\r\n\r\n  adiciona(negociacao) {\r\n    return new Promise((resolve, reject) => {\r\n      let request = this._connection\r\n        .transaction([this._store], \"readwrite\")\r\n        .objectStore(this._store)\r\n        .add(negociacao);\r\n\r\n      request.onsuccess = (e) => {\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = (e) => {\r\n        console.log(e.target.error);\r\n        reject(\"Não foi possível adicionar a negociação\");\r\n      };\r\n    });\r\n  }\r\n\r\n  listaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n      let cursor = this._connection\r\n        .transaction([this._store], \"readwrite\")\r\n        .objectStore(this._store)\r\n        .openCursor();\r\n\r\n      let negociacoes = [];\r\n\r\n      cursor.onsuccess = (e) => {\r\n        let atual = e.target.result;\r\n        if (atual) {\r\n          let dado = atual.value;\r\n          negociacoes.push(\r\n            new Negociacao(dado._data, dado._quantidade, dado._valor)\r\n          );\r\n          atual.continue();\r\n        } else {\r\n          resolve(negociacoes);\r\n        }\r\n      };\r\n\r\n      cursor.onerror = (e) => {\r\n        console.log(e.target.error.name);\r\n        reject(\"Não foi possível listar as negociações\");\r\n      };\r\n    });\r\n  }\r\n\r\n  apagaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n      let request = this._connection\r\n        .transaction([this._store], \"readwrite\")\r\n        .objectStore(this._store)\r\n        .clear();\r\n\r\n      request.onsuccess = (e) => resolve(\"Negociaçoes apagadas com sucesso\");\r\n\r\n      request.onerror = (e) => {\r\n        console.log(e.target.error);\r\n        reject(\"Não foi possível apagar as negociações\");\r\n      };\r\n    });\r\n  }\r\n}\r\n"],"file":"NegociacaoDao.js"}